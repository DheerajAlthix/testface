# Generated by Django 5.1.7 on 2025-03-22 00:43

import appmanager.patient.models.health_record
import appmanager.patient.models.service
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctor', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalCareService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/', validators=[appmanager.patient.models.service.validate_file_size])),
                ('availability', models.BooleanField(default=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('appointment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('healthcare_provider', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='provider_appointments', to='doctor.healthcareprovider')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='patient_appointments', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='appointments', to='patient.personalcareservice')),
            ],
            options={
                'ordering': ['appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Rating must be at least 1'), django.core.validators.MaxValueValidator(5, message='Rating cannot exceed 5')])),
                ('review', models.TextField()),
                ('healthcare_provider', models.ForeignKey(db_column='healthcareprovider_id', on_delete=django.db.models.deletion.DO_NOTHING, related_name='ratings', to='doctor.healthcareprovider')),
            ],
            options={
                'ordering': ['-rating'],
            },
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('file', models.FileField(max_length=255, upload_to='health_records/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png']), appmanager.patient.models.health_record.validate_file_size])),
                ('report_type', models.CharField(choices=[('blood_test', 'Blood Test'), ('x_ray', 'X-Ray'), ('mri', 'MRI'), ('ct_scan', 'CT Scan'), ('other', 'Other')], max_length=50)),
                ('sample_collection', models.DateTimeField(default=django.utils.timezone.now)),
                ('uploaded_by', models.CharField(max_length=50)),
                ('checked_by', models.CharField(max_length=50)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'report_type'], name='patient_hea_user_id_2fc254_idx'), models.Index(fields=['sample_collection'], name='patient_hea_sample__0f4a5a_idx')],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('condition', models.CharField(choices=[('diabetes', 'Diabetes'), ('hypertension', 'Hypertension'), ('heart_disease', 'Heart Disease'), ('asthma', 'Asthma'), ('arthritis', 'Arthritis'), ('cancer', 'Cancer'), ('other', 'Other')], max_length=50)),
                ('diagnosis_date', models.DateField(default=django.utils.timezone.now)),
                ('symptoms', models.TextField()),
                ('treatment', models.TextField()),
                ('medications', models.TextField(blank=True, null=True)),
                ('is_ongoing', models.BooleanField(default=True)),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('critical', 'Critical')], max_length=20)),
                ('healthcare_provider', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='diagnosed_conditions', to='doctor.healthcareprovider')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='medical_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Medical Histories',
                'ordering': ['-diagnosis_date'],
                'indexes': [models.Index(fields=['patient', 'condition'], name='patient_med_patient_89bfd9_idx'), models.Index(fields=['healthcare_provider', 'condition'], name='patient_med_healthc_e1cebd_idx'), models.Index(fields=['diagnosis_date'], name='patient_med_diagnos_7c963c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='personalcareservice',
            index=models.Index(fields=['provider', 'availability'], name='patient_per_provide_ab3cda_idx'),
        ),
        migrations.AddIndex(
            model_name='personalcareservice',
            index=models.Index(fields=['price'], name='patient_per_price_9abe16_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'status'], name='patient_app_patient_cf6ec2_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['healthcare_provider', 'status'], name='patient_app_healthc_0ebda6_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date'], name='patient_app_appoint_9edc28_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('patient', 'healthcare_provider', 'appointment_date')},
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('healthcare_provider', 'created_at')},
        ),
    ]
